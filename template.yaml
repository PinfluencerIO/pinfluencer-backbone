AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Pinfluencer backend stack
  
Parameters:
  UserPoolId:
    Type: String
    Description: User pool id for Cognito
  ClientIdAudience:
    Type: String
    Description: Client id for user pool
  DatabaseUser:
    Type: String
    Description: DB_USER
  DatabasePassword:
    Type: String
    Description: DB_PASSWORD
  DatabaseUrl:
    Type: String
    Description: DB_URL
  DatabaseName:
    Type: String
    Description: DB_NAME
  LambdaRole:
    Type: String
    Description: The role which the lambda executes

Globals:
  Function:
    Timeout: 50
    Environment:
      Variables:
        DB_USER: !Ref DatabaseUser
        DB_PASSWORD: !Ref DatabasePassword
        DB_URL: !Ref DatabaseUrl
        DB_NAME: !Ref DatabaseName

Resources:
  PinfluencerHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - "https://localhost:3000"
          - "https://app.pinfluencer.io"
        AllowHeaders:
          - "*"
        AllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
          - PATCH
      Auth:
        Authorizers:
          UserAuth:
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              issuer:
                !Join
                  - ''
                  - - 'https://cognito-idp.'
                    - !Sub ${AWS::Region}
                    - '.amazonaws.com/'
                    - !Sub ${UserPoolId}
              audience: 
                - !Sub ${ClientIdAudience}

  PinfluencerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: !Ref LambdaRole
      CodeUri: ./
      Handler: src/app.lambda_handler
      Runtime: python3.9
      Events:
#        PUBLIC Endpoints
        Feed:
          Type: HttpApi
          Properties:
            Path: /feed
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        GetAllBrands:
          Type: HttpApi
          Properties:
            Path: /brands
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        GetBrandById:
          Type: HttpApi
          Properties:
            Path: /brands/{brand_id}
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        GetAllInfluencers:
          Type: HttpApi
          Properties:
            Path: /influencers
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        GetInfluencerById:
          Type: HttpApi
          Properties:
            Path: /influencers/{influencer_id}
            Method: get
            ApiId: !Ref PinfluencerHttpApi

        GetAllCampaignsForBrandById:
          Type: HttpApi
          Properties:
            Path: /brands/{brand_id}/campaigns
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        GetAllCampaigns:
          Type: HttpApi
          Properties:
            Path: /campaigns
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        GetCampaignById:
          Type: HttpApi
          Properties:
            Path: /campaigns/{campaign_id}
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        CreateInfluencer:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /influencers/me
            Method: post
            ApiId: !Ref PinfluencerHttpApi
        GetInfluencer:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /influencers/me
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        UpdateInfluencerImage:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /influencers/me/image
            Method: patch
            ApiId: !Ref PinfluencerHttpApi
        UpdateInfluencer:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /influencers/me
            Method: put
            ApiId: !Ref PinfluencerHttpApi
        CreateBrand:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /brands/me
            Method: post
            ApiId: !Ref PinfluencerHttpApi
        GetBrand:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /brands/me
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        UpdateBrandImage:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /brands/me/image
            Method: patch
            ApiId: !Ref PinfluencerHttpApi
        UpdateBrand:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /brands/me
            Method: put
            ApiId: !Ref PinfluencerHttpApi
        CreateCampaign:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /campaigns/me
            Method: post
            ApiId: !Ref PinfluencerHttpApi
        ReadAllCampaign:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /campaigns/me
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        ReadCampaignById:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /campaigns/me/{campaign_id}
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        UpdateCampaignById:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /campaigns/me/{campaign_id}
            Method: put
            ApiId: !Ref PinfluencerHttpApi
        UpdateCampaignImgeById:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /campaigns/me/{campaign_id}/image/{image_num}
            Method: patch
            ApiId: !Ref PinfluencerHttpApi
        DeleteCampaignById:
          Type: HttpApi
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /campaigns/me/{campaign_id}
            Method: delete
            ApiId: !Ref PinfluencerHttpApi
Outputs:
  PinfluencerGetAllBrands:
    Description: "API Gateway endpoint URL Get All Brands function"
    Value: !Sub "https://${PinfluencerHttpApi}.execute-api.${AWS::Region}.amazonaws.com/brands"
  PinfluencerGetAllCampaigns:
    Description: "API Gateway endpoint URL Post All Campaigns function"
    Value: !Sub "https://${PinfluencerHttpApi}.execute-api.${AWS::Region}.amazonaws.com/campaigns"
    