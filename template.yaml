AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Pinfluencer backend stack
  
Parameters:
  UserPoolId:
    Type: String
    Description: User pool id for Cognito
  ClientIdAudience:
    Type: String
    Description: Client id for user pool
  DatabaseName:
    Type: String
    Description: DATABASE_NAME
  DbClusterARN:
    Type: String
    Description: DB_CLUSTER_ARN
  DatabaseSecretARN:
    Type: String
    Description: DB_SECRET_ARN
  LambdaRole:
    Type: String
    Description: The role which the lambda executes

Globals:
  Function:
    Timeout: 10
    Environment:
      Variables:
        DATABASE_NAME: !Ref DatabaseName
        DB_CLUSTER_ARN: !Ref DbClusterARN
        DB_SECRET_ARN: !Ref DatabaseSecretARN

Resources:
  PinfluencerHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - "https://localhost:3000"
          - "https://app.pinfluencer.io"
        AllowHeaders:
          - "*"
        AllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
      Auth:
        Authorizers:
          UserAuth:
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              issuer:
                !Join
                  - ''
                  - - 'https://cognito-idp.'
                    - !Sub ${AWS::Region}
                    - '.amazonaws.com/'
                    - !Sub ${UserPoolId}
              audience: 
                - !Sub ${ClientIdAudience}

  PinfluencerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Role: !Ref LambdaRole
      CodeUri: .
      Handler: functions/app.lambda_handler
      Runtime: python3.9
      Events:
#        PUBLIC Endpoints
        Feed:
          Type: HttpApi
          Properties:
            Path: /feed
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        GetAllBrands:
          Type: HttpApi
          Properties:
            Path: /brands
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        GetBrandById:
          Type: HttpApi
          Properties:
            Path: /brands/{brand_id}
            Method: get
            ApiId: !Ref PinfluencerHttpApi

        GetAllProductsForBrandById:
          Type: HttpApi
          Properties:
            Path: /brands/{brand_id}/products
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        GetAllProducts:
          Type: HttpApi
          Properties:
            Path: /products
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        GetProductById:
          Type: HttpApi
          Properties:
            Path: /products/{product_id}
            Method: get
            ApiId: !Ref PinfluencerHttpApi
##        AUTHENTICATED Endpoints
#        CreateBrand:
#          Type: HttpApi
#          Properties:
#            Auth:
#              Authorizer: UserAuth
#            Path: /brands/me
#            Method: post
#            ApiId: !Ref PinfluencerHttpApi
#        GetBrand:
#          Type: HttpApi
#          Properties:
#            Auth:
#              Authorizer: UserAuth
#            Path: /brands/me
#            Method: get
#            ApiId: !Ref PinfluencerHttpApi
#        UpdateBrand:
#          Type: HttpApi
#          Properties:
#            Auth:
#              Authorizer: UserAuth
#            Path: /brands/me
#            Method: put
#            ApiId: !Ref PinfluencerHttpApi
#        CreateProduct:
#          Type: HttpApi
#          Properties:
#            Auth:
#              Authorizer: UserAuth
#            Path: /products/me
#            Method: post
#            ApiId: !Ref PinfluencerHttpApi
#        ReadAllProduct:
#          Type: HttpApi
#          Properties:
#            Auth:
#              Authorizer: UserAuth
#            Path: /products/me
#            Method: get
#            ApiId: !Ref PinfluencerHttpApi
#        ReadProductById:
#          Type: HttpApi
#          Properties:
#            Auth:
#              Authorizer: UserAuth
#            Path: /products/me/{product_id}
#            Method: get
#            ApiId: !Ref PinfluencerHttpApi
#        UpdateProductById:
#          Type: HttpApi
#          Properties:
#            Auth:
#              Authorizer: UserAuth
#            Path: /products/me/{product_id}
#            Method: put
#            ApiId: !Ref PinfluencerHttpApi
#        DeleteProductById:
#          Type: HttpApi
#          Properties:
#            Auth:
#              Authorizer: UserAuth
#            Path: /products/me/{product_id}
#            Method: delete
#            ApiId: !Ref PinfluencerHttpApi
Outputs:
  PinfluencerGetAllBrands:
    Description: "API Gateway endpoint URL Get All Brands function"
    Value: !Sub "https://${PinfluencerHttpApi}.execute-api.${AWS::Region}.amazonaws.com/brands"
  PinfluencerGetAllProducts:
    Description: "API Gateway endpoint URL Post All Products function"
    Value: !Sub "https://${PinfluencerHttpApi}.execute-api.${AWS::Region}.amazonaws.com/products"
    