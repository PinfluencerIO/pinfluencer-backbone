AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Pinfluencer backend stack
  
Parameters:
  UserPoolId:
    Type: String
    Description: User pool id for Cognito
  ClientIdAudience:
    Type: String
    Description: Client id for user pool
  DatabaseName:
    Type: String
    Description: DATABASE_NAME
  DbClusterARN:
    Type: String
    Description: DB_CLUSTER_ARN
  DatabaseSecretARN:
    Type: String
    Description: DB_SECRET_ARN
  LambdaRole:
    Type: String
    Description: The role which the lambda executes

Globals:
  Function:
    Timeout: 3
    # Layers:
    #   - !Ref CommonLayer
    Environment:
      Variables:
        DATABASE_NAME: !Ref DatabaseName
        DB_CLUSTER_ARN: !Ref DbClusterARN
        DB_SECRET_ARN: !Ref DatabaseSecretARN

Resources:
  # CommonLayer:
  #   Type: AWS::Serverless::LayerVersion
  #   Properties:
  #     LayerName: common_layer
  #     ContentUri: layers/
  #     CompatibleRuntimes:
  #       - python3.9
  #   Metadata:
  #     BuildMethod: python3.9

  # CommonLayerVersionPermission:
  #   Type: AWS::Lambda::LayerVersionPermission
  #   Properties:
  #     Action: lambda:GetLayerVersion
  #     LayerVersionArn: !Ref CommonLayer
  #     Principal: !Ref AWS::AccountId

  PinfluencerHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        Authorizers:
          UserAuth:
            # AuthorizationScopes:
            #   - email
            #   - openid
            #   - profile
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              issuer:
                !Join
                  - ''
                  - - 'https://cognito-idp.'
                    - !Sub ${AWS::Region}
                    - '.amazonaws.com/'
                    - !Sub ${UserPoolId}
              audience: 
                - !Sub ${ClientIdAudience}
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - OPTIONS
        AllowOrigins:
          - http://localhost:3000
          - https://localhost:3000
          - https://auth.pinfluencer.io
          - https://app.pinfluencer.io
  
  PinfluencerFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !Ref LambdaRole
      CodeUri: functions/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        BrandsCreate:
          Type: HttpApi 
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /brands
            Method: post
            ApiId: !Ref PinfluencerHttpApi
        BrandsRead:
          Type: HttpApi 
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /brands
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        BrandsUpdate:
          Type: HttpApi 
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /brands
            Method: put
            ApiId: !Ref PinfluencerHttpApi
        BrandsDelete:
          Type: HttpApi 
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /brands
            Method: delete
            ApiId: !Ref PinfluencerHttpApi
        ProductsCreate:
          Type: HttpApi 
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /products
            Method: post
            ApiId: !Ref PinfluencerHttpApi
        ProductsRead:
          Type: HttpApi 
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /products
            Method: get
            ApiId: !Ref PinfluencerHttpApi
        ProductsUpdate:
          Type: HttpApi 
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /products
            Method: put
            ApiId: !Ref PinfluencerHttpApi
        ProductsDelete:
          Type: HttpApi 
          Properties:
            Auth:
              Authorizer: UserAuth
            Path: /products
            Method: delete
            ApiId: !Ref PinfluencerHttpApi

Outputs:
  ApiGetBrands:
    Description: "API Gateway endpoint URL Get Brands function"
    Value: !Sub "https://${PinfluencerHttpApi}.execute-api.${AWS::Region}.amazonaws.com/brands"
  ApiPostBrands:
    Description: "API Gateway endpoint URL Post Brands function"
    Value: !Sub "https://${PinfluencerHttpApi}.execute-api.${AWS::Region}.amazonaws.com/brands"
  ApiGetProducts:
    Description: "API Gateway endpoint URL Get Products function"
    Value: !Sub "https://${PinfluencerHttpApi}.execute-api.${AWS::Region}.amazonaws.com/products"
  ApiPostProducts:
    Description: "API Gateway endpoint URL Get Products function"
    Value: !Sub "https://${PinfluencerHttpApi}.execute-api.${AWS::Region}.amazonaws.com/products"
    